@page "/Clientes/Create"
@rendermode InteractiveServer
@inject ClientesService clientesService
@inject NavigationManager navigation
<link rel="stylesheet" href="StyleCreate.css" />

<PageTitle>Crear Clientes</PageTitle>


<EditForm Model="@Clientes" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container mt-5">
        <div class="card p-4 shadow-lg border-primary">
            <div class="card-header">
                <h5 class="card-title text-center mb-4 bg-primary text-white p-2 rounded">Crear Cliente</h5>
            </div>

            <div class="card-body">
                @* Cliente ID*@
                <div class="mb-3">
                    <label for="ClienteId" class="form-label text-primary">Cliente Id</label>
                    <InputNumber class="form-control" @bind-Value="Clientes.ClienteId" readonly></InputNumber>
                </div>

                @*Nombre*@
                <div class="mb-3">
                    <label for="Cliente" class="form-label text-primary">Nombre</label>
                    <InputText class="form-control" @bind-Value="Clientes.Nombres"></InputText>
                    <ValidationMessage For="(()=> Clientes.Nombres)"></ValidationMessage>
                    @if (!string.IsNullOrEmpty(Mensaje))
                    {
                        <div class="alert alert-danger" role="alert">
                            @Mensaje
                        </div>
                    }
                </div>

                @*Tiempo*@
                <div class="mb-3">
                    <label for="Whatsapp" class="form-label text-primary">WhatsApp</label>
                    <InputText class="form-control" @bind-Value="Clientes.WhatsApp"></InputText>
                    <ValidationMessage For="(()=> Clientes.WhatsApp)"></ValidationMessage>
                    @if (!string.IsNullOrEmpty(MensajeN))
                    {
                        <div class="alert alert-danger" role="alert">
                            @MensajeN
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="card-footer d-flex justify-content-center">
            <a href="/Clientes/Index" class="btn btn-outline-primary bi bi-arrow-left mt-3"> Volver</a>
            <button type="submit" class="btn btn-outline-success bi bi-floppy mt-3"> Guardar</button>
        </div>
    </div>
</EditForm>

@code {
    public Clientes Clientes { get; set; } = new Clientes();
    public String Mensaje { get; set; } = string.Empty;
    public String MensajeN { get; set; } = string.Empty;

    public async Task Guardar()
    {
        bool nombreExiste = await clientesService.NombreExiste(Clientes.Nombres);
        bool numeroExiste = await clientesService.NumeroExiste(Clientes.WhatsApp);
        if (nombreExiste)
        {
            Mensaje = "El nombre del Cliente ya existe.";
            return;
        }
        if (numeroExiste)
        {
            MensajeN = "El numero del Cliente ya esta en uso.";
            return;
        }
        {
            await clientesService.Guardar(Clientes);
            Clientes = new Clientes();
            navigation.NavigateTo("/Clientes/Index");
        }
    }

}
