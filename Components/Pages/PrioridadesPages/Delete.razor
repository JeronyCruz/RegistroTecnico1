@page "/Prioridades/Delete/{PrioridadesId:int}"
@rendermode InteractiveServer
@inject PrioridadesService prioridadService
@inject NavigationManager navigation

<PageTitle>Eliminar Prioridad</PageTitle>

@*Body*@
<div class="Contenedor_Eliminar">
    <div class="list-details">
        @*Detalles de la Prioridad*@
        <ul>
            <li>Prioridad Id: @Prioridades.PrioridadId</li>
            <li>Descripci&oacute;n: @Prioridades.Descripcion</li>
            <li>Tiempo: @Prioridades.Tiempo</li>
        </ul>
    </div>
    @*Botones*@
    <div class="botones">
        <button type="submit" @onclick="Volver" class="bi bi-arrow-90deg-left"> Volver</button>
        <button type="submit" @onclick="Eliminar" class="bi bi-person-x-fill"> Eliminar</button>
    </div>

    <div>
        <label>Estas Seguro de que desea eliminar esta Prioridad?</label>
    </div>
</div>

@code {
    [Parameter]
    public int PrioridadesId { get; set; }
    public Prioridades Prioridades { get; set; } = new Prioridades();

    protected override async Task OnInitializedAsync()
    {
        Prioridades = await prioridadService.Buscar(PrioridadesId);
    }

    public async Task Eliminar()
    {
        var eliminar = await prioridadService.Eliminar(Prioridades.PrioridadId);

        if (eliminar)
        {
            Console.WriteLine("Se ha eliminado correctamente la Prioridad");
            navigation.NavigateTo("/Prioridades/Index");
        }
        else
        {
            Console.WriteLine("No se pudo eliminar la prioridad");
        }
    }

    public void Volver()
    {
        navigation.NavigateTo("/Prioridades/Index");
    }

}
