@page "/Prioridades/Delete/{PrioridadesId:int}"
@rendermode InteractiveServer
@inject PrioridadesService prioridadService
@inject NavigationManager navigation

<PageTitle>Eliminar Prioridad</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header text-center">
            <h5><strong>Datos de la prioridad</strong></h5>
        </div>

        <div class="card-body">
            <div class="text-center">
                <h5>¿Desea eliminar la prioridad</h5>
            </div>
            <table class="mt-4 table">
                <tr>
                    <td><strong>Prioridad Id:</strong></td>
                    <td>@Prioridades.PrioridadId</td>
                </tr>
                <tr>
                    <td><strong>Descripción:</strong></td>
                    <td>@Prioridades.Descripcion</td>
                </tr>
                <tr>
                    <td><strong>Tiempo:</strong></td>
                    <td>@Prioridades.Tiempo</td>
                </tr>
            </table>
        </div>


        <div class="card-footer text-center">
            <a href="/Prioridades/Index" class="btn btn-outline-primary bi bi-arrow-left"> Volver</a>
            <button type="submit" @onclick="Eliminar" class="btn btn-outline-danger btn bi bi-trash"> Eliminar</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int PrioridadesId { get; set; }
    public Prioridades Prioridades { get; set; } = new Prioridades();

    protected override async Task OnInitializedAsync()
    {
        Prioridades = await prioridadService.Buscar(PrioridadesId);
    }

    public async Task Eliminar()
    {
        var eliminar = await prioridadService.Eliminar(Prioridades.PrioridadId);

        if (eliminar)
        {
            Console.WriteLine("Se ha eliminado correctamente la Prioridad");
            navigation.NavigateTo("/Prioridades/Index");
        }
        else
        {
            Console.WriteLine("No se pudo eliminar la prioridad");
        }
    }

}
