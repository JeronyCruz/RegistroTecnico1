@page "/Tecnicos/Create"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject NavigationManager navigation
<link rel="stylesheet" href="StyleCreate.css" />

<h2>Crear Nuevo T&eacute;cnicos</h2>

<EditForm Model="@tecnicos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="ContenedorAgregar">
        <h3>Nuevo T&eacute;cnico</h3>

        <div class="inputsAgregar">
            <label>ID</label>
            <InputNumber @bind-Value="tecnicos.TecnicoId" readonly/>
        </div>

        <div class="inputsAgregar">
            <label>Nombre</label>
            <InputText @bind-Value="tecnicos.NombresTecnico" />
            @if (!string.IsNullOrEmpty(Mensaje))
            {
                <label class="error-label">@Mensaje</label>
            }
        </div>

        <div class="inputsAgregar">
            <label>Sueldo por Hora</label>
            <InputNumber @bind-Value="tecnicos.SueldoHora" />
        </div>

        <div class="BotonesAgregar">
            <button type="button" @onclick="Volver">Volver</button>
            <button type="submit">Guardar</button>
        </div>
    </div>
</EditForm>

@code {
    public Tecnicos tecnicos { get; set; } = new Tecnicos();
    string Mensaje { get; set; } = string.Empty;

    public async Task Guardar()
    {
        
        bool nombreExiste = await tecnicoService.NombreExiste(tecnicos.NombresTecnico);

        if (nombreExiste)
        {
            
            Mensaje = "El nombre del técnico ya está en uso.";
        }
        else
        {
            
            await tecnicoService.Guardar(tecnicos);
            tecnicos = new Tecnicos();  
            navigation.NavigateTo("/Tecnicos/Index");  
        }
    }

    public void Volver()
    {
        navigation.NavigateTo("/Tecnicos/Index");
    }
}
