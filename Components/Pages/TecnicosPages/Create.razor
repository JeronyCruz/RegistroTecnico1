@page "/Tecnicos/Create"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject TiposTecnicosService tiposTecnicosService
@inject NavigationManager navigation
<link rel="stylesheet" href="StyleCreate.css" />

<PageTitle> Agregar T&eacute;cnicos</PageTitle>

<h2>Crear Nuevo T&eacute;cnicos</h2>

<EditForm Model="@Tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="ContenedorAgregar">
        <h3>Nuevo T&eacute;cnico</h3>

        <div class="inputsAgregar">
            <label>ID</label>
            <InputNumber @bind-Value="Tecnico.TecnicoId" readonly />
        </div>

        <div class="inputsAgregar">
            <label>Nombre</label>
            <InputText @bind-Value="Tecnico.NombresTecnico" />
            @if (!string.IsNullOrEmpty(Mensaje))
            {
                <label class="error-label">@Mensaje</label>
            }
        </div>

        <div class="inputsAgregar">
            <label>Sueldo por Hora</label>
            <InputNumber @bind-Value="Tecnico.SueldoHora" />
        </div>

        <div class="inputsAgregar">
            <label>Descripci&oacute;n del T&eacute;cnico</label>
            <InputSelect class="form-select" @bind-Value="Tecnico.Descripcion">
                <option ="" selected disabled>Elija una Opci&oacute;n</option>
                @foreach (var tipoTecnico in TiposTecnico)
                {
                    <option value="@tipoTecnico.Descripcion">@tipoTecnico.Descripcion</option>
                }
            </InputSelect>
        </div>

        <div class="BotonesAgregar">
            <button type="button" @onclick="Volver">
                <i class="bi bi-arrow-return-left"></i> Volver
            </button>
            <button type="submit">
                <i class="bi bi-plus-circle-dotted"></i> Guardar
            </button>
        </div>
    </div>
</EditForm>

@code {
    public Tecnicos Tecnico { get; set; } = new Tecnicos();
    public List<TiposTecnicos> TiposTecnico { get; set; } = new List<TiposTecnicos>();
    string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        TiposTecnico = await tiposTecnicosService.Listar(j => j.Id > 0);
    }

    public async Task Guardar()
    {

        bool nombreExiste = await tecnicoService.NombreExiste(Tecnico.NombresTecnico);

        if (nombreExiste)
        {

            Mensaje = "El nombre del técnico ya está en uso.";
        }
        else
        {

            await tecnicoService.Guardar(Tecnico);
            Tecnico = new Tecnicos();
            navigation.NavigateTo("/Tecnicos/Index");
        }
    }

    public void Volver()
    {
        navigation.NavigateTo("/Tecnicos/Index");
    }
}
