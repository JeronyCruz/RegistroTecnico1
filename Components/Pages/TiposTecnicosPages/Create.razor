@page "/TiposTecnicos/Create"
@rendermode InteractiveServer
@inject TiposTecnicosService tiposTecnicoService
@inject NavigationManager navigation
<link rel="stylesheet" href="StyleCreate.css" />

<PageTitle> Crear T&eacute;cnicos</PageTitle>

<h2>Crear Nuevo Tipo T&eacute;cnicos</h2>

<EditForm Model="@TiposTecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="ContenedorAgregar">
        <h3>Nuevo tipo T&eacute;cnico</h3>

        <div class="inputsAgregar">
            <label>ID</label>
            <InputNumber @bind-Value="TiposTecnico.Id" readonly />
        </div>

        <div class="inputsAgregar">
            <label>Descripci&oacute;n</label>
            <InputText @bind-Value="TiposTecnico.Descripcion" />
            @if (!string.IsNullOrEmpty(Mensaje))
            {
                <label class="error-label">@Mensaje</label>
            }
        </div>

        <div class="BotonesAgregar">
            <button type="button" @onclick="Volver">Volver</button>
            <button type="submit">Guardar</button>
        </div>
    </div>
</EditForm>

@code {
    public TiposTecnicos TiposTecnico { get; set; } = new TiposTecnicos();
    string Mensaje { get; set; } = string.Empty;

    public async Task Guardar()
    {

        bool DescripccionExiste = await tiposTecnicoService.DescripcionExiste(TiposTecnico.Descripcion);

        if (DescripccionExiste)
        {

            Mensaje = "La descripcion del técnico ya está en uso.";
        }
        else
        {

            await tiposTecnicoService.Guardar(TiposTecnico);
            TiposTecnico = new TiposTecnicos();
            navigation.NavigateTo("/TiposTecnicos/Index");
        }
    }

    public void Volver()
    {
        navigation.NavigateTo("/TiposTecnicos/Index");
    }
}
