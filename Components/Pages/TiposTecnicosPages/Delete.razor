@page "/TiposTecnicos/Delete/{tecnicoId:int}"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject TiposTecnicosService tiposTecnicosService
@inject NavigationManager navigation
<link rel="stylesheet" href="StyleDelete.css" />

<PageTitle> Eliminar Tipos T&eacute;cnicos</PageTitle>

@*Body*@
<div class="Contenedor_Eliminar">
    <div class="list-details">
        @*Detalles*@
        <ul>
            <li>T&eacute;cnico Id: @TiposTecnico.Id</li>
            <li>Descripci&oacute;n del t&eacute;cnico: @TiposTecnico.Descripcion</li>
        </ul>
    </div>
    @*Botones*@
    <div class="botones">
        <a href="/TiposTecnicos/Index" class="btn btn-primary">
            <i class="bi bi-arrow-return-left"></i> Volver
        </a>
        <button type="submit" @onclick="Eliminar" class="bi bi-person-x-fill"> Eliminar</button>
    </div>

    <div>
        <label>Estas Seguro de que desea eliminar a este tipo t&eacute;cnico?</label>
    </div>
</div>


@code {
    [Parameter]
    public int TecnicoId { get; set; }
    public TiposTecnicos TiposTecnico { get; set; } = new TiposTecnicos();

    protected override async Task OnInitializedAsync()
    {
        TiposTecnico = await tiposTecnicosService.Buscar(TecnicoId);
    }

    public async Task Eliminar()
    {
        var eliminar = await tiposTecnicosService.Eliminar(TiposTecnico.Id);

        if (eliminar)
        {
            Console.WriteLine("El técnico fue eliminado correctamente.");
            navigation.NavigateTo("/TiposTecnicos/Index");
        }
        else
        {
            Console.WriteLine("No se pudo eliminar el técnico.");
            // Aquí podrías mostrar un mensaje de error en la interfaz si lo deseas.
        }
    }

}
