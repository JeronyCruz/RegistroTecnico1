@page "/TiposTecnicos/Edit/{tecnicoId:int}"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject TiposTecnicosService tiposTecnicosService
@inject NavigationManager navigation

<PageTitle> Editar Tipos T&eacute;cnicos</PageTitle>

<h3>Modificar</h3>

<div class="Contenedor_Modificar">
    <EditForm Model="@TiposTecnico" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <ValidationSummary />
        @*ID*@
        <div class="Inputs-text">
            <label>Tipo T&eacute;cnico Id:</label>
            <input type="text" @bind="TiposTecnico.Id" readonly />
        </div>
        @*Descripcion*@
        <div class="Inputs-text">
            <label>Descripci&oacute;n:</label>
            <InputText @bind-Value="TiposTecnico.Descripcion" />
            @if (!string.IsNullOrEmpty(Mensaje))
            {
                <label class="error-label">@Mensaje</label>
            }
            <ValidationMessage For="(()=> TiposTecnico.Descripcion)"></ValidationMessage>
        </div>
        @*Botones*@
        <div class="botones">
            <button type="button" @onclick="Volver" class="bi bi-arrow-90deg-left"> Volver</button>
            <button type="submit" class="bi bi-plus-circle-dotted"> Guardar</button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public int TecnicoId { get; set; }
    public string Mensaje { get; set; } = string.Empty;
    public TiposTecnicos TiposTecnico { get; set; } = new TiposTecnicos();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            TiposTecnico = await tiposTecnicosService.Buscar(TecnicoId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar técnico: {ex.Message}");
        }
    }

    public async Task Guardar()
    {
        bool DescripcionExiste = await tiposTecnicosService.DescripcionExiste(TiposTecnico.Descripcion);

        if (DescripcionExiste)
        {

            Mensaje = "La Descripcion del técnico ya está en uso.";
        }
        else
        {

            await tiposTecnicosService.Guardar(TiposTecnico);
            TiposTecnico = new TiposTecnicos();
            navigation.NavigateTo("/TiposTecnicos/Index");
        }
    }

    public void Volver()
    {
        navigation.NavigateTo("/TiposTecnicos/Index");
    }
}
