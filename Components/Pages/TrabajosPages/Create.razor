@page "/Trabajos/Create"
@rendermode InteractiveServer
@inject TecnicoService tecnicosService
@inject TrabajosService trabajosService
@inject ClientesService clientesService
@inject PrioridadesService prioridadesService
@inject NavigationManager navigation


<PageTitle> Agregar Trabajos</PageTitle>

<h2>Crear Nuevo Trabajo</h2>

<EditForm Model="@Trabajos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container mt-5">
        <div class="card p-4 shadow-lg border-primary">
            <div class="card-header">
                <h5 class="card-title text-center mb-4 bg-primary text-white p-2 rounded">Crear Trabajo</h5>
            </div>

            <div class="card-body">
                @*ID*@
                <div class="mb-3">
                    <label for="CobroId" class="form-label text-primary">Trabajo ID</label>
                    <InputNumber class="form-control" @bind-Value="Trabajos.TrabajoId" readonly></InputNumber>
                </div>

                @*Fecha*@
                <div class="mb-3">
                    <label for="fecha" class="form-label text-primary">Fecha</label>
                    <InputDate class="form-control" @bind-Value="Trabajos.Fecha"></InputDate>
                </div>

                @*Prioridad*@
                <div class="mb-3 d-flex align-items-center">
                    <label for="DeudorId" class="form-label text-primary">Elija la Prioridad</label>
                    <InputSelect id="DeudorId" class="form-control border-primary" @bind-Value="Trabajos.PrioridadId">
                        <option disabled value="">-- Seleccione un deudor --</option>
                        @foreach (var prioridad in Prioridades)
                        {
                            <option value="@prioridad.PrioridadId">@prioridad.Descripcion</option>
                        }
                    </InputSelect>
                </div>

                @*Cliente*@
                <div class="mb-3 d-flex align-items-center">
                    <label for="DeudorId" class="form-label text-primary">Elija el Cliente</label>
                    <InputSelect id="DeudorId" class="form-control border-primary" @bind-Value="Trabajos.ClienteId">
                        <option disabled value="">-- Seleccione un deudor --</option>
                        @foreach (var cliente in Clientes)
                        {
                            <option value="@cliente.ClienteId">@cliente.Nombres</option>
                        }
                    </InputSelect>
                </div>

                @*Tecnico*@
                <div class="mb-3 d-flex align-items-center">
                    <label for="DeudorId" class="form-label text-primary">Elija el Tecnico</label>
                    <InputSelect id="DeudorId" class="form-control border-primary" @bind-Value="Trabajos.TecnicoId" >
                        <option disabled value="">-- Seleccione un deudor --</option>
                        @foreach (var tecnico in Tecnicos)
                        {
                            <option value="@tecnico.TecnicoId">@tecnico.NombresTecnico</option>
                        }
                    </InputSelect>
                </div>

                @*Descripccion*@
                <div class="mb-3">
                    <label for="CobroId" class="form-label text-primary">Descripc&Iacute;n del trabajo</label>
                    <InputText class="form-control" @bind-Value="Trabajos.Descripcion"></InputText>
                    <ValidationMessage For="(()=> Trabajos.Descripcion)"></ValidationMessage>
                </div>

                @*Monto*@
                <div class="mb-3">
                    <label for="CobroId" class="form-label text-primary">Monto del trabajo</label>
                    <InputNumber class="form-control" @bind-Value="Trabajos.Monto"></InputNumber>
                    <ValidationMessage For="(()=> Trabajos.Monto)"></ValidationMessage>
                    @if (!string.IsNullOrEmpty(SueldoMensaje))
                    {
                        <div class="alert alert-danger" role="alert">
                            @SueldoMensaje
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="card-footer d-flex justify-content-center">
            <a href="/Trabajos/Index" class="btn btn-outline-primary bi bi-arrow-left mt-3"> Volver</a>
            <button type="submit" class="btn btn-outline-success bi bi-floppy mt-3"> Guardar</button>
        </div>
    </div>
</EditForm>

@code {
    public List<Tecnicos> Tecnicos { get; set; } = new List<Tecnicos>();
    public List<Clientes> Clientes { get; set; } = new List<Clientes>();
    public List<Prioridades> Prioridades { get; set; } = new List<Prioridades>();
    public Trabajos Trabajos { get; set; } = new Trabajos();
    public string Mensaje { get; set; } = string.Empty;
    public string SueldoMensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Tecnicos = await tecnicosService.Listar(j => j.Id > 0);
        Clientes = await clientesService.Listar(j => j.ClienteId > 0);
        Prioridades = await prioridadesService.Listar(j => j.PrioridadId > 0);
    }

    public async Task Guardar()
    {
        if (Trabajos.Monto <= 0)
        {
            SueldoMensaje = "El Monto debe ser mayor a 0.";
            return;
        }

        else
        {
            await trabajosService.Guardar(Trabajos);
            Trabajos = new Trabajos();
            navigation.NavigateTo("/Trabajos/Index");
        }
    }

}
